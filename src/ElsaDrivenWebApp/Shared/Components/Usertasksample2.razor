@inject UsertaskService userTaskService

@if (Task != null)
{

    <form>
        <div class="form-group">
            <label for="exampleInputEmail1">Email address</label>
            <input type="email" @bind=data.Email class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" placeholder="Enter email">
            <small id="emailHelp" class="form-text text-muted">We'll never share your email with anyone else.</small>
        </div>  <div class="form-group">
            <label for="exampleInputPassword1">Password</label>
            <input type="password" @bind=data.Password class="form-control" id="exampleInputPassword1" placeholder="Password">
        </div>
        <button @onclick="() => SendSignalAndData()">Continue</button>
    </form>
}

@code {

    [Parameter]
    public EventCallback OnFinished { get; set; }

    [Parameter]
    public UsertaskViewModel Task { get; set; }

    UsertaskSample2DataModel data = new UsertaskSample2DataModel();

    private async Task SendSignalAndData()
    {
        await userTaskService.MarkAsCompleteAsync(Task.WorkflowInstanceId, Task.Signal, JsonConvert.SerializeObject(data));
        await OnFinished.InvokeAsync();
        Task = null;
    }

    class UsertaskSample2DataModel
    {
        public string Email { get; set; }
        public string Password { get; set; }
    }
}
